 	case CLOCK_BYTES_OUT_POS_MSB:
            clock_obyte_data_pos(0);
            break;
            clock_obyte_data_neg(0);
            break;
            clock_obits_data_pos(0);
            break;
            clock_obits_data_neg(0);
            break;
            clock_ibyte_data_pos(0);
            break;
            clock_ibyte_data_neg(0);
            break;
            clock_ibits_data_pos(0);
            printf("Now length is %02x current byte is %02x",get_current_length(),get_current_byte());
            break;
            clock_ibits_data_neg(0);
            break;
            clock_iobyte_data(0,0);
            break;
            clock_iobyte_data(1,0);
            break;
            clock_iobits_data(0,0);
            break;
            clock_iobits_data(1,0);
            break;
            clock_obyte_data_pos(1);
            break;
            clock_obyte_data_neg(1);
            break;
            clock_obits_data_pos(1);
            break;
            clock_obits_data_neg(1);
            break;
            clock_ibyte_data_pos(1);
            break;
            clock_ibyte_data_neg(1);
            break;
            clock_ibits_data_pos(1);
            break;
            clock_ibits_data_neg(1);
            break;
             read_write_bytes_JTAG();
            //clock_iobyte_data(0,1);
            break;
            clock_iobyte_data(1,1);
            break;
            read_write_bits_JTAG();
            //clock_iobits_data(0,1);
            break;
            clock_iobits_data(1,1);
            break;
            /* The next 2 bytes indicate the number of bits to clock out via TMS*/
            printf("Function unimplemented currently,using negative edge\r\n");
            clock_bits_tms();
            break;
            /* The next 2 bytes indicate the number of bits to clock out via TMS*/
            clock_bits_tms();
            break;
            read_bits_write_TMS_JTAG();
            break;
            read_bits_write_TMS_JTAG();
            break;
            read_bits_write_TMS_JTAG();
            break;
            read_bits_write_TMS_JTAG();
            break;
            //Look again and verify that this can actually be done
            a = get_next_byte();
            b = get_next_byte();
            IOA = a;
            OEA = b;
            OEA = b;
            //decrement_total_byte_count(3);
            //printf("Write direction %02x, value %02x length %02d\r\n",a,b, ep2_buffer.total_length);
            break;
            OEB = get_next_byte();
            IOB = get_next_byte();
            //decrement_total_byte_count(3);
            //printf("Write high bytes\r\n");
            break;
            //decrement_total_byte_count(1);
            //printf("Read low bytes\r\n");
            break;
            //decrement_total_byte_count(1);
            //printf("Read high bytes\r\n");
            break;
            break;
            break;
            break;
            flush_ep1in_data();
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
            break;
        default:
            //decrement_total_byte_count(1);
            printf("Command has not been implemented %02x\r\n",get_current_byte());
            break;

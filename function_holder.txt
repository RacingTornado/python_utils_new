def func0x10():
	print '3.3.1 Clock Data Bytes Out on +ve clock edge MSB first (no read)';
def func0x11():
	print '3.3.2 Clock Data Bytes Out on -ve clock edge MSB first (no read)';
def func0x12():
	print '3.3.3 Clock Data Bits Out on +ve clock edge MSB first (no read)';
def func0x13():
	print '3.3.4 Clock Data Bits Out on -ve clock edge MSB first (no read)';
def func0x20():
	print '3.3.5 Clock Data Bytes In on +ve clock edge MSB first (no write)';
def func0x24():
	print '3.3.6 Clock Data Bytes In on -ve clock edge MSB first (no write)';
def func0x22():
	print '3.3.7 Clock Data Bits In on +ve clock edge MSB first (no write)';
def func0x26():
	print '3.3.8 Clock Data Bits In on -ve clock edge MSB first (no write)';
def func0x31():
	print '3.3.9 Clock Data Bytes In and Out MSB first,edged';
def func0x34():
	print '3.3.9 Clock Data Bytes In and Out MSB first,edged';
def func0x33():
	print '3.3.10 Clock Data bits In and Out MSB first';
def func0x36():
	print '3.3.10 Clock Data bits In and Out MSB first,edged';
def func0x18():
	print '3.4.1 Clock Data Bytes Out on +ve clock edge LSB first (no read)';
def func0x19():
	print '3.4.2 Clock Data Bytes Out on -ve clock edge LSB first (no read)';
def func0x1a():
	print '3.4.3 Clock Data Bits Out on +ve clock edge LSB first (no read)';
def func0x1b():
	print '3.4.4 Clock Data Bits Out on -ve clock edge LSB first (no read)';
def func0x28():
	print '3.4.5 Clock Data Bytes In on +ve clock edge LSB first (no write)';
def func0x2c():
	print '3.4.6 Clock Data Bytes In on -ve clock edge LSB first (no write)';
def func0x2a():
	print '3.4.7 Clock Data Bits In on +ve clock edge LSB first (no write)';
def func0x2e():
	print '3.4.8 Clock Data Bits In on -ve clock edge LSB first (no write)';
def func0x39():
	print '3.4.9 Clock Data Bytes In and Out LSB first,edged';
def func0x3c():
	print '3.4.9 Clock Data Bytes In and Out LSB first,edged';
def func0x3b():
	print '3.4.10 Clock Data Bits In and Out LSB first,edged';
def func0x3e():
	print '3.4.10 Clock Data Bits In and Out LSB first,edged';
def func0x4a():
	print '3.5.1 Clock Data to TMS pin (no read)';
def func0x4b():
	print '3.5.1 Clock Data to TMS pin (no read)';
def func0x6a():
	print '3.5.2 Clock Data to TMS pin with read';
def func0x6b():
	print '3.5.2 Clock Data to TMS pin with read';
def func0x6e():
	print '3.5.2 Clock Data to TMS pin with read';
def func0x6f():
	print '3.5.2 Clock Data to TMS pin with read';
def func0x80():
	print '3.6.1 Set Data bits LowByte';
def func0x82():
	print '3.6.2 Set Data bits High Byte';
def func0x81():
	print '3.6.3 Read Data bits LowByte';
def func0x83():
	print '3.6.4 Read Data bits HighByte';
def func0x84():
	print '3.7.1 Connect TDI to TDO for Loopback';
def func0x85():
	print '3.7.2 Disconnect TDI to TDO for Loopback';
def func0x86():
	print '3.8.1 Set TCK/SK Divisor (FT2232D)';
def func0x87():
	print 'Flush buffer';
def func0x88():
	print '5.2 Wait On I/O High';
def func0x89():
	print '5.3 Wait On I/O Low';
def func0x8a():
	print 'Disables the clk divide by 5 to allow for a 60MHz master clock. ';
def func0x8b():
	print 'Enables the clk divide by 5 to allow for backward compatibility with FT2232D';
def func0x8c():
	print 'Enables 3 phase data clocking. Used by I2C interfaces to allow data on both clock edges.';
def func0x8d():
	print 'Disables 3 phase data clocking.';
def func0x8e():
	print 'Allows for a clock to be output without transferring data. Commonly used in the JTAG state machine. Clocks counted in terms of numbers of bits';
def func0x8f():
	print 'Allows for a clock to be output without transferring data. Commonly used in the JTAG state machine. Clocks counted in terms of numbers of bytes';
def func0x94():
	print 'Allows for a clock to be output without transferring datauntil a logic 1 input on GPIOL1stops the clock.';
def func0x95():
	print 'Allows for a clock to be output without transferring datauntil a logic 0 input on GPIOL1stops the clock.';
def func0x96():
	print 'Enable adaptive clocking';
def func0x97():
	print 'Disable adaptive clocking';
def func0x9c():
	print 'Allows for a clock to be output without transferring data until a logic1 input on GPIOL1stops the clock or a set number of clock pulses are sent. Clocks counted in terms of numbers of bytes';
def func0x9d():
	print 'Allows for a clock to be output without transferring datauntil a logic 0 input on GPIOL1stops the clock or a set number of clock pulses are sent. Clocks counted in terms of numbers of bytes';
